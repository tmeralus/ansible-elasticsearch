---
#- name: Copy templated logstash.repo.j2
#  template:
#    src: logstash.repo.j2
#    dest: /etc/yum.repos.d/logstash.repo
#    mode: 0644
#  become: true

- name: Install logstash rpms
  yum:
    name: logstash
    state: present
  become: true

- name: Copy logstash filter configuration
  template:
    src: logstash.conf.j2
    dest: /etc/logstash/conf.d/logstash.conf
    owner: logstash
    group: logstash
    mode: 0644
  become: true

- name: Copy 02-beats-input filter configuration
  template:
    src: 02-beats-input.conf.j2
    dest: /etc/logstash/conf.d/02-beats-input.conf
    owner: logstash
    group: logstash
    mode: 0644
  become: true

- name: Copy 03-logstash-syslog filter configuration
  template:
    src: 03-logstash-syslog.conf.j2
    dest: /etc/logstash/conf.d/03-logstash-syslog.conf
    owner: logstash
    group: logstash
    mode: 0644
  become: true

- name: Copy logstash systemd config
  template:
    src: systemd.j2
    dest: /etc/systemd/system/logstash.service
    owner: logstash
    group: logstash
    mode: 0644
  become: true

- name: Load OpenSSL CA Extended Configuration
  template:
    src: openssl_extras.cnf.j2
    dest: /etc/pki/tls/openssl_extras.cnf
    owner: root
    group: root
    mode: 0644
  become: true

- name: Check OpenSSL SANs (SubjectAltName) entry for CA
  shell: grep "{{ ansible_default_ipv4.address }}" /etc/pki/tls/openssl.cnf | wc -l
  ignore_errors: true
  register: subjectAltName_exists
  become: true

- name: Add OpenSSL SANs (SubjectAltName) entry for CA
  lineinfile:
    dest: /etc/pki/tls/openssl.cnf
    line: 'subjectAltName = "IP: {{ ansible_default_ipv4.address }}"'
    regexp: '^ Extensions for a typical CA'
    insertbefore: '# Extensions for a typical CA'
    backup: yes
  when: subjectAltName_exists.stdout|int == 0
  become: true

- name: Setup logstash service to autostart
  service:
    name: logstash
    state: started
    enabled: true
  become: true
  ignore_errors: true
#fails in docker container
